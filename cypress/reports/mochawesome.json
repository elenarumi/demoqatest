{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 5,
    "pending": 0,
    "failures": 1,
    "start": "2024-12-04T09:01:41.450Z",
    "end": "2024-12-04T09:02:24.905Z",
    "duration": 43455,
    "testsRegistered": 6,
    "passPercent": 83.33333333333334,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "19a66445-0f9f-4bea-aa0c-f37618260c72",
      "title": "",
      "fullFile": "cypress/e2e/challenge/demoqa.cy.js",
      "file": "cypress/e2e/challenge/demoqa.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d5c0fb7d-829c-4632-b08b-35c1b7c36edb",
          "title": "Automation demo qa tools",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC1 Submit form with credentials",
              "fullTitle": "Automation demo qa tools TC1 Submit form with credentials",
              "timedOut": null,
              "duration": 13156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Arrange\nconst firstName = \"Elenia\";\nconst lastName = \"Buss\";\nconst email = \"kakerbet@gmail.com\";\nconst mobile = \"568778890\";\nconst subjects = \"Jira, Cypress\";\nconst fileName = 'example.json';\nconst myAddress = \"Plaza Ciudad de Viena, 6, 1822, Madrid\";\ncy.visit('https://demoqa.com/automation-practice-form');\n// ACT\ncy.get('#firstName').type(firstName);\ncy.get('#lastName').type(lastName);\ncy.get('#userEmail').type(email);\ncy.get('input[id=\"gender-radio-2\"]').check({\n  force: true\n});\ncy.get('#userNumber').type(mobile);\n// Date of birth picker\ncy.get('#dateOfBirthInput').click();\ncy.get('.react-datepicker__month-select').select('November');\ncy.get('.react-datepicker__year-select').select('2024');\ncy.get('div.react-datepicker__day--025').click();\ncy.get('#dateOfBirthInput').should('have.value', '25 Nov 2024');\n// Subjects\ncy.get('div.subjects-auto-complete__value-container.subjects-auto-complete__value-container--is-multi.css-1hwfws3').type(subjects);\n// Pruebas de checkboxes de Hobbies\ncy.get('#hobbies-checkbox-1').check({\n  force: true\n}).should('be.checked');\ncy.get('#hobbies-checkbox-2').check({\n  force: true\n}).should('be.checked');\ncy.get('#hobbies-checkbox-3').check({\n  force: true\n}).should('be.checked');\ncy.get('#hobbies-checkbox-1').uncheck({\n  force: true\n}).should('not.be.checked');\ncy.get('#hobbies-checkbox-2').uncheck({\n  force: true\n}).should('not.be.checked');\ncy.get('#hobbies-checkbox-3').uncheck({\n  force: true\n}).should('not.be.checked');\ncy.get('#hobbies-checkbox-1').check({\n  force: true\n});\ncy.get('#hobbies-checkbox-2').check({\n  force: true\n});\ncy.get('#hobbies-checkbox-1').should('be.checked');\n// Adjuntar el archivo al input de tipo file\ncy.get('#uploadPicture').attachFile(fileName);\ncy.get('#uploadPicture').then(input => {\n  const filePath = input.val();\n  expect(filePath).to.include(fileName);\n});\ncy.get('#currentAddress').type(myAddress);\n// Prueba de la lista desplegable State\ncy.get('#state').click();\ncy.contains('Uttar Pradesh').click();\n// Prueba de la lista desplegable City\ncy.get('#city .css-1wa3eu0-placeholder').click();\ncy.contains('Agra').click({\n  force: true\n});\n// Subir el formulario\ncy.get('#submit').click();",
              "err": {},
              "uuid": "1f67d829-e178-4c62-8fc8-6fc85352d04e",
              "parentUUID": "d5c0fb7d-829c-4632-b08b-35c1b7c36edb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC2 Checkbox: Should check and display the labels",
              "fullTitle": "Automation demo qa tools TC2 Checkbox: Should check and display the labels",
              "timedOut": null,
              "duration": 4069,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://demoqa.com/checkbox\");\ncy.get('[for^=tree-node]').should('have.length', 1);\ncy.get('.rct-option-expand-all').click();\ncy.get('.rct-checkbox').then(nodes => {\n  const count = nodes.length;\n  const randomNodeIndex = Cypress._.random(0, count - 1);\n  cy.wrap(nodes).eq(randomNodeIndex).click();\n  cy.get('[type=checkbox]').eq(randomNodeIndex).check({\n    force: true\n  });\n  cy.get('[type=checkbox]').eq(randomNodeIndex).should('be.checked');\n  cy.get('[type=checkbox]').eq(0).check({\n    force: true\n  });\n  cy.get('[type=checkbox]').eq(0).should('be.checked');\n  cy.get('[type=checkbox]').eq(randomNodeIndex).uncheck({\n    force: true\n  });\n  cy.get('[type=checkbox]').eq(randomNodeIndex).should('not.be.checked');\n});\nconst labels = [];\ncy.get('.rct-checkbox').find('.rct-icon.rct-icon-check').then(elements => {\n  elements.each((index, element) => {\n    const text = Cypress.$(element).closest('.rct-node').find('.rct-title').text();\n    labels.push(text);\n  });\n  const successTexts = [];\n  cy.get('#result .text-success').each((index, element) => {\n    successTexts.push(Cypress.$(element).text());\n  });\n  const checkedLabels = labels.map(text => text.toLowerCase().replace(\".doc\", \"\").replace(\" \", \"\"));\n  const displayedTexts = successTexts.map(text => text.toLowerCase());\n  cy.log('Checked Labels:', checkedLabels);\n  cy.log('Displayed Texts:', displayedTexts);\n  expect(displayedTexts).to.have.members(checkedLabels);\n});",
              "err": {
                "message": "AssertionError: expected [] to have the same members as [ Array(13) ]",
                "estack": "AssertionError: expected [] to have the same members as [ Array(13) ]\n    at Context.eval (webpack:///./cypress/e2e/challenge/demoqa.cy.js:113:37)",
                "diff": "- []\n+ [ 'desktopnotescommands',\n+   'notes',\n+   'commands',\n+   'angular',\n+   'veu',\n+   'officepublicprivateclassifiedgeneral',\n+   'public',\n+   'private',\n+   'classified',\n+   'general',\n+   'downloadswordfileexcel file.doc',\n+   'wordfile',\n+   'excelfile' ]\n"
              },
              "uuid": "77b497a0-aabf-4cd8-ba24-ab6992ba8bea",
              "parentUUID": "d5c0fb7d-829c-4632-b08b-35c1b7c36edb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC3 Radio buttons",
              "fullTitle": "Automation demo qa tools TC3 Radio buttons",
              "timedOut": null,
              "duration": 4639,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const radioYes = \"Yes\";\nconst radioImpressive = \"Impressive\";\nconst radioNo = \"No\";\ncy.visit('https://demoqa.com/radio-button');\nfunction getRadio(radioName) {\n  // Encuentra el radio button por su etiqueta\n  return cy.contains('.custom-control-label', radioName).siblings('input');\n}\n// Selecciona el radio button \"Yes\"\ngetRadio(radioYes).check({\n  force: true\n}).then(() => {\n  cy.get('.text-success').should('have.text', radioYes);\n});\ngetRadio(radioImpressive).check({\n  force: true\n}).then(() => {\n  cy.get('.text-success').should('have.text', radioImpressive);\n});\n// Verifica que el radio button \"Yes\" est√° seleccionado\ngetRadio(radioNo).should('be.disabled');",
              "err": {},
              "uuid": "6df48c9b-47e2-4bec-b9bb-3c08a6d3202a",
              "parentUUID": "d5c0fb7d-829c-4632-b08b-35c1b7c36edb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC4 Buttons",
              "fullTitle": "Automation demo qa tools TC4 Buttons",
              "timedOut": null,
              "duration": 3569,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demoqa.com/buttons');\ncy.contains('Double Click Me').dblclick();\ncy.contains('Right Click Me').rightclick();\ncy.get('button.btn:not([id$=Btn])').click();",
              "err": {},
              "uuid": "c35b8b95-4d8d-45be-a1bb-cf46e8de2342",
              "parentUUID": "d5c0fb7d-829c-4632-b08b-35c1b7c36edb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC5 Dynamic buttons",
              "fullTitle": "Automation demo qa tools TC5 Dynamic buttons",
              "timedOut": null,
              "duration": 6803,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demoqa.com/dynamic-properties');\ncy.get(\"#enableAfter\").should('not.be.enabled');\ncy.get(\"#visibleAfter\").should('not.exist');\ncy.wait(5000);\ncy.get(\"#enableAfter\").should('be.enabled');\ncy.get(\"#visibleAfter\").should('be.visible');\n//traducir dc3545 en rgb\ncy.get(\"#colorChange\").should('have.css', 'color', 'rgb(220, 53, 69)');",
              "err": {},
              "uuid": "7a9ca8ee-b54c-4310-b39e-326b08d577cf",
              "parentUUID": "d5c0fb7d-829c-4632-b08b-35c1b7c36edb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC6 Upload and download a file",
              "fullTitle": "Automation demo qa tools TC6 Upload and download a file",
              "timedOut": null,
              "duration": 4408,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demoqa.com/upload-download');\n// Verify and log the download file name\ncy.get('#downloadButton').invoke('attr', 'download').should('eq', 'sampleFile.jpeg').then(fileName => {\n  cy.log(`File to download: ${fileName}`);\n  // Click the download button\n  cy.get('#downloadButton').click();\n  // Verify the file exists in the downloads folder\n  const downloadPath = `/Users/elenarumiantseva/Desktop/demoqa/cypress/downloads/${fileName}`;\n  cy.readFile(downloadPath).should('exist');\n  // Upload the file\n  cy.get('#uploadFile').selectFile(downloadPath);\n  // Verify the uploaded file path\n  cy.get('#uploadedFilePath').should('contain.text', fileName);\n});",
              "err": {},
              "uuid": "6efbbf3b-2d0a-4f10-a85e-013cd7ec7ae4",
              "parentUUID": "d5c0fb7d-829c-4632-b08b-35c1b7c36edb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f67d829-e178-4c62-8fc8-6fc85352d04e",
            "6df48c9b-47e2-4bec-b9bb-3c08a6d3202a",
            "c35b8b95-4d8d-45be-a1bb-cf46e8de2342",
            "7a9ca8ee-b54c-4310-b39e-326b08d577cf",
            "6efbbf3b-2d0a-4f10-a85e-013cd7ec7ae4"
          ],
          "failures": [
            "77b497a0-aabf-4cd8-ba24-ab6992ba8bea"
          ],
          "pending": [],
          "skipped": [],
          "duration": 36644,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}